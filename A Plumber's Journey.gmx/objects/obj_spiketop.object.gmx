<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_spiketop</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_deactenemyparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///A enemy with a spiky shell which can walk everywhere

//How vulnerable is this enemy to various items?
hardness = 1;

//How vulnerable is this enemy to Mario?
stomp = 1;

//Facing direction
xscale = 1;

//Set the death sprite
deathsprite = sprite_index;

//Palette
palette = noone;

//Scoregrade
scoregrade = 1;

//Move
alarm[10] = 2;

//Animate
image_speed = 0.1;

//Angle
turn = 0;

//This prevents a bug that causes it to not work if it starts on a certain wall.
if (place_meeting(x,y+1,obj_solid))
    y++;
if (place_meeting(x-1,y,obj_solid) = false)
    direction = 180;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>nograv</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Walk towards the player

if (!instance_exists(obj_player))
|| (obj_player.x &lt; x)
    xscale = -1;
else
    xscale = 1;

//Set the speed
speed = 0.4*xscale;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reset turning animation

turn = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Spiketop logic

if (speed &gt; 0) {

    //Check if there's no floor on the way.
    if (place_meeting(x + lengthdir_x(speed + 1,direction - 90),y + lengthdir_y(speed + 1,direction - 90),obj_solid) == false) {
    
        //Set a turning pose
        if (turn == 0) {
        
            turn = 1;
            alarm[0] = 6;
        }
    
        //Rotate
        direction -= 90;
        
        //Make sure it's all the way onto the next side before doing any collision checks.
        x += hspeed;
        y += vspeed;
        
        //Make contact with the new surface
        move_contact_object(direction - 90,speed,obj_solid);
    }
    
    //Otherwise, check if he ran into a wall.
    else if (place_meeting(x + lengthdir_x(speed,direction),y + lengthdir_y(speed,direction),obj_solid)) {

        //Set a turning pose
        if (turn == 0) {
        
            turn = 2;
            alarm[0] = 6;
        }    
            
        //Rotate it so it's moving up the wall.
        direction += 90;
        
        //Make full contact with the wall.
        move_contact_object(direction - 90,speed,obj_solid);
    }
}

//Assuming that the spiny is moving left and on the ground,
if (speed &lt; 0) {

    //This checks *below* the spiny since you're double negating the direction... It's confusing but it works.
    if (place_meeting(x + lengthdir_x(speed - 1,direction + 90),y + lengthdir_y(speed - 1,direction + 90),obj_solid) == false) {
    
        //Set a turning pose
        if (turn == 0) {
        
            turn = -1;
            alarm[0] = 6;
        }
    
        //Rotate
        direction += 90;
        
        //Make sure it's all the way onto the next side before doing any collision checks.
        x += hspeed;
        y += vspeed;
        
        //Make contact with the new surface
        move_contact_object(direction + 90,speed,obj_solid);
    }
    
    //Otherwise, check if he ran into a wall.
    else if (place_meeting(x + lengthdir_x(speed,direction),y + lengthdir_y(speed,direction),obj_solid)) {

        //Set a turning pose
        if (turn == 0) {
        
            turn = -2;
            alarm[0] = 6;
        }
             
        //Rotate it so it's moving up the wall.
        direction -= 90;
        
        //Make full contact with the wall.
        move_contact_object(direction + 90,speed,obj_solid);
    }
}

//Turn at enemies script
event_user(2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Turn at enemies script

//Colliding horizontally
if ((hspeed &lt; 0) &amp;&amp; (collision_rectangle(bbox_left-hspeed*2,bbox_top,bbox_left,bbox_bottom,obj_enemyparent,0,1)))
|| ((hspeed &gt; 0) &amp;&amp; (collision_rectangle(bbox_right,bbox_top,bbox_right+hspeed*2,bbox_bottom,obj_enemyparent,0,1))) {

    //Reverse direction
    speed = -speed;
    
    //Reverse facing direction
    xscale = -xscale;
}

//Colliding vertically
if ((vspeed &lt; 0) &amp;&amp; (collision_rectangle(bbox_left,bbox_top-vspeed*2,bbox_right,bbox_top,obj_enemyparent,0,1)))
|| ((vspeed &gt; 0) &amp;&amp; (collision_rectangle(bbox_left,bbox_bottom,bbox_right,bbox_bottom+vspeed*2,obj_enemyparent,0,1))) {

    //Reverse direction
    speed = -speed;
    
    //Reverse facing direction
    xscale = -xscale;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw spiketop

if (turn == 0)
    draw_sprite_ext(sprite_index,-1,round(x),round(y),xscale,1,direction,c_white,1);
else {

    if ((turn == 1) || (turn == -2))  
        draw_sprite_ext(sprite_index,0,round(x),round(y),xscale,1,direction+45,c_white,1);
    else if ((turn == 2) || (turn == -1))  
        draw_sprite_ext(sprite_index,0,round(x),round(y),xscale,1,direction-45,c_white,1);     
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
