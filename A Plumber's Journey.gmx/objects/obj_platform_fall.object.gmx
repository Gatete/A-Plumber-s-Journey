<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_platform_fall_64</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>obj_platformparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///A falling platform, be careful with these ones

//Whether this platform is falling
ready = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>nograv</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Apply gravity

gravity = 0.1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Falling platform logic (Player)

//If the player overlaps the platform.
if (ready == 0)
&amp;&amp; (collision_rectangle(bbox_left,bbox_top-1,bbox_right,bbox_top,obj_player,0,0)) 
&amp;&amp; (obj_player.y &lt; y-11)
&amp;&amp; (obj_player.state &lt; 2) {
    
    //Set the vertical speed
    vspeed = 0.25;
    
    //Fall
    ready = 1;
    
    //Apply gravity
    alarm[0] = 15;
}

//Check if this platform is falling and move it to the start position when it's origin is outside the view.
if ((ready == 1) &amp;&amp; (bbox_top &gt; room_height))
    ready = 2;
else if (ready == 2) {

    //If the platform start position is outside the view.
    if (xstart &lt; view_xview[0]-64)
    || (xstart &gt; view_xview[0]+view_wview[0])
    || (ystart &lt; view_yview[0]-16)
    || (ystart &gt; view_yview[0]+view_hview[0]) {
    
        //Create a new platform
        with (instance_create(xstart,ystart,obj_platform_fall)) {
        
            //Hereby same sprite
            sprite_index = other.sprite_index;
        }
        
        //Destroy
        instance_destroy();
    }
}

//Cap vertical speed
if (vspeed &gt; 2)
    vspeed = 2;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Falling platform logic (All Instances)

//Check if a NPC is above the platform
for (var i=0; i&lt;instance_count; i++;) {

    //Make the NPCs move along with the platform
    if (collision_rectangle(bbox_left,bbox_top-5,bbox_right,bbox_top+4,instance_id[i],0,0)) 
    &amp;&amp; (instance_id[i].vspeed == 0)
    &amp;&amp; (instance_id[i].nograv == 0)
    &amp;&amp; (instance_id[i].y &lt; bbox_top-11)
    &amp;&amp; (!collision_rectangle(instance_id[i].bbox_left,bbox_top-5,instance_id[i].bbox_right,bbox_top+1,obj_semisolid,0,1))
        instance_id[i].y = ceil(bbox_top-16);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
