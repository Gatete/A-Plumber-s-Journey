<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_door</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>obj_physicsparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///A door, warp the player to another destination or room.

//Do not animate
image_speed = 0;

//Door scale
xscale = 1;

//Whether the door is opening
ready = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>nograv</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move to the new destination

//Check for a warp room
mywarp = instance_place(x,y,obj_warproom);

//If a warp object exists
if (mywarp) {

    with (mywarp) {
    
        //If the position needs to be changed in the next room
        if (postchange != -1) {
        
            global.postchange = postchange;
            global.postx = postx+8;
            global.posty = posty;
        }
        
        //Go to the set room
        room_goto(myroom);
    }
}

//If no warp object exists.
else {

    //Check for a position change
    mywarp = instance_place(x,y,obj_postchange);
    
    //If the position change exists, create player at that position
    if (mywarp) {
    
        instance_create(mywarp.postx+8,mywarp.posty,obj_player);
    }
        
    //Otherwise, create the player on the same door
    else {
    
        instance_create(x,y,obj_player);
    }
    
    //Deactivate barrier and force camera position
    with (obj_levelmanager) {
    
        //Activate barrier
        barrier = 1;
        alarm[6] = 3;
        
        //Force camera position
        x = obj_player.x;
        y = obj_player.y;
        target_x = obj_player.x;
        target_y = obj_player.y;                  
    }
    
    //Destroy door player
    with (obj_player_door) instance_destroy();
    
    //Force fade out
    with (obj_persistent) {
    
        event_user(0);
        size = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Door logic

//If the door is opening
if (ready &gt; 0) {

    //If the door is opening
    if (ready == 1) {
    
        xscale -= 0.05;
        if (xscale = -0.5)     
            ready = 2;
    }
    
    //If fully opened, make the player enter
    else if (ready == 2) {
    
        //Set the position and alpha for the player
        with (player) {
        
            //Set the position
            if (x &lt; other.x-1) {
            
                //Move
                x++;
                
                //Scale
                image_xscale = 1;
                
                //Set walk sprite
                sprite_index = scr_player_walk();
                
                //Animate
                image_speed = 0.3;
            }
            else if (x &gt; other.x+1) {
            
                //Move
                x--;
                
                //Scale
                image_xscale = -1;
                
                //Set walk sprite
                sprite_index = scr_player_walk();
                
                //Animate
                image_speed = 0.3;
            }
            else {
            
                //Set idle sprite
                sprite_index = scr_player_idle();
                
                //Do not animate
                image_speed = 0;
                image_index = 0;
                
                //Snap
                x = other.x;
        
                //Set the alpha
                image_alpha -= 0.05;
                if (image_alpha &lt; 0.05) {
                
                    image_alpha = 0;
                    with (other) ready = 3;
                }
            }
        }
    }
    
    //Otherwise, if the player entered and the door is opened. Close it!
    else if (ready = 3) {
    
        xscale += 0.2;
        if (xscale &gt; 0.8) {
        
            //Play 'Close' sound
            scr_playsound(snd_door_close, snd_door_close_8bit, 0, false);
        
            //Make door usable again
            ready = 0;
            
            //Set scale
            xscale = 1;
        
            //Go to the new destination
            alarm[0] = 30;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw door

//Draw door inside
draw_sprite(sprite_index,0,round(x),round(y));

//Draw doors
draw_sprite_ext(sprite_index,1,round(x)-10,round(y),xscale,1,0,c_white,1);
draw_sprite_ext(sprite_index,2,round(x)+10,round(y),xscale,1,0,c_white,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Let the player enter the door

//If the player is on the door and it's not jumping.
if ((place_meeting(x,y,obj_player)) &amp;&amp; (obj_player.state != 2)) {

    //Exit this event if the door is not visible
    if (!visible)
    exit;
    
    //Check if the door is usable
    if (ready == 0) {
    
        //Play 'Door' sound
        scr_playsound(snd_door, snd_door_8bit, 0, false);
        
        //Start scale
        ready = 1;
        
        //Create door player object
        player = instance_create(obj_player.x,obj_player.y,obj_player_door);
        with (player) {
        
            image_xscale = obj_player.xscale;
        }
        
        //Destroy main player object
        with (obj_player) instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
