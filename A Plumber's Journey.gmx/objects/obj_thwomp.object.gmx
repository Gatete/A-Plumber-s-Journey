<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_thwomp</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_deactenemyparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///A rock who likes to squish pesky plumbers

//How vulnerable is this enemy to various items?
hardness = 1;

//How vulnerable is this enemy to Mario?
stomp = 1;

//Facing direction
xscale = 1;

//Set the death sprite
deathsprite = sprite_index;

//Palette
palette = noone;

//Scoregrade
scoregrade = 4;

//Turning scale
fakexscale = 0;

//Whether if the thwomp is falling or returning back
ready = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>nograv</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Return to the initial position

//Do not animate
image_speed = 0;
image_index = 0;

//Set the vertical movement
vspeed = -1;

//Prevent the thwomp from falling
ready = 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Thwomp animation

if ((ready == 0) || (ready == 3)) {

    //If the thwomp is not falling
    if (ready == 0) {
    
        //If the player does exist.
        if (instance_exists(obj_player)) {
        
            if ((obj_player.x &gt; x-64) &amp;&amp; (obj_player.x &lt; x+64))
                image_index = 1;
            else
                image_index = 0;
        }
    }
    else
        image_index = 0;
}
else
    image_index = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Thwomp logic

//If the thwomp is waiting for the player.
if (ready &lt; 3) {

    //If the thwomp is not falling.
    if (ready == 0) {
    
        if (instance_exists(obj_player)) {
        
            if ((obj_player.x &gt; x-32) &amp;&amp; (obj_player.x &lt; x+32) &amp;&amp; (obj_player.y &gt; y)) {
            
                //Set the gravity
                gravity = 0.2;
                
                //Fall
                ready = 1;
            }
        }
    }
    
    //Otherwise, if the thwomp is falling.
    else {
    
        if (ready == 1) {
        
            //Check for a nearby semisolid
            var semisolid = collision_rectangle(bbox_left,bbox_bottom,bbox_right,bbox_bottom+vspeed,obj_semisolid,0,1);
            
            //If the semisolid exist.
            if (semisolid)
            &amp;&amp; (vspeed &gt; 0) 
            &amp;&amp; (bbox_bottom &lt; semisolid.yprevious+5) {
            
                //Play 'Thwomp' sound
                scr_playsound(snd_thwomp, snd_firework_8bit, 0, false);
            
                //Snap above the semisolid collision
                y = semisolid.bbox_top-16;
                
                //Stop vertical movement
                vspeed = 0;
                gravity = 0;
                
                //Don't do anything
                ready = 2;
                alarm[0] = 60;
                
                //Create smoke effects
                instance_create(bbox_left-8,bbox_bottom-8,obj_smoke);
                instance_create(bbox_right-8,bbox_bottom-8,obj_smoke);                
            }
            
            //Cap vertical speed
            if (vspeed &gt; 4)
                vspeed = 4;
        }
    }
}

//Otherwise, if the thwomp is returning to it's initial position
else if ((ready == 3) &amp;&amp; (y &lt; ystart)) {

    //Stop vertical movement
    vspeed = 0;
    y = ystart;
    
    //Make the thwomp able to fall again
    ready = 0;
}
    
//Follow the player
if (!instance_exists(obj_player))
|| (obj_player.x &lt; x)
    xscale = -1;
else
    xscale = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
