<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_goomba</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_deactenemyparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///A goomba, no one knows if it's a mushroom or a chestnut.

//How vulnerable is this enemy to various items?
hardness = 0;

//How vulnerable is this enemy to Mario?
stomp = 0;

//Facing direction
xscale = 1;

//Set the death sprite
deathsprite = spr_goomba_dead2;

//Palette
palette = spr_palette_goomba;

//Scoregrade
scoregrade = 0;

//Animate
image_speed = 0.1;

//Remember enemies below.
if (position_meeting(x,bbox_bottom+8,obj_goomba)) {

    mebelow = collision_point(x,bbox_bottom+8,obj_goomba,0,0);
    alarm[0] = 10;
}
 
//If there's not enemies below, note that and start walking towards mario.
else {
    mebelow = noone;
    alarm[10] = 2;
}

//Offset values
offset = 0;
offsetnext = 0;
offsetxscale = 1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>nograv</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Manage offset values

//If there's memory of a goomba below
if (instance_exists(mebelow)) {
    offsetxscale = -mebelow.offsetxscale
}

switch (offsetnext) {
    case (0): {
        offset = offsetxscale;
    } break;
    case (1): {
        offset = 0;
    } break;
    case (2): {
        offset = -offsetxscale;
    } break;
    case (3): {
        offset = 0;
    } break;
}

//Increment next offset
offsetnext++;
if (offsetnext == 4)
    offsetnext = 0;

//Keep changing offset values
alarm[0] = 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Goomba logic

//If there's no memory of a enemy below.
if (mebelow == noone) {

    //If a enemy is below, remember it.
    if (position_meeting(x,bbox_bottom+8,obj_goomba)) {
    
        //Ride above this goomba
        mebelow = collision_point(x,bbox_bottom+8,obj_goomba,0,0);
        
        //Stop moving
        vspeed = 0;
        gravity = 0;
        
        //Manage offset values
        alarm[0] = 10;
    }
    
    //Otherwise, execute default event and deny offset functions.
    else {
    
        //Execute default event
        event_inherited()        
            
        //Reset offset values
        offset = 0;
        offsetnext = 0;
        
        //Deny offset values
        alarm[0] = -1;
    }
}

//If there's memory of a enemy below.
else {

    //Activate the enemy below.
    instance_activate_object(mebelow);
    
    //If the enemy exits, snap it.
    if (instance_exists(mebelow)) {
    
        //Snap above it
        x = mebelow.x;
        y = mebelow.bbox_top-16;
        xscale = mebelow.xscale;
    }
    
    //Otherwise, lose memory of it and move towards the player.
    else {
    
        //Lose memory of it.
        mebelow = noone;
        
        //Walk towards the player.
        if (hspeed != 0)
            exit;
        else {
        
            if ((!instance_exists(obj_player)) || (obj_player.x &lt; x))
                hspeed = -0.5;
            else
                hspeed = 0.5;
        }
    }
}

//Set the sprite
if (mebelow == noone)
    sprite_index = spr_goomba;
else
    sprite_index = spr_goomba_alt;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Turn into a pancake

instance_create(x,y,obj_stomped);
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw enemy

//Set the shader
if (palette != noone) {

    scr_pal_swap_set(palette,global.skin);
}

//Draw
draw_sprite_ext(sprite_index,-1,round(x)+offset,round(y)+1,xscale,1,image_angle,c_white,1);
    
//Reset the shader
if (palette != noone)
    shader_reset();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
