<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_mappanel</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>obj_panelparent</parentName>
  <maskName>spr_panelmask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Secret World Map Level Panel

/*
**  This item uses creation code!
**
**  world = World number (In quotes)
**  check_st = From what star to check
**  level_id = ID of the level
**  thumb_frame = Thumbnail frame
**  name = Name of the level
*/

//Default Values:
world = "1";
check_st = 0;
level_id = 0;
thumb_frame = 0;
name = "";

//Prebuilt value
level = "S";

//Image speed
image_speed = 0.15;

//Alpha
alpha = 0;
alpha2 = 0.5;

//Unlock the level if certain conditions are met
j = 0;
for (var i=check_st; i&lt;check_st+8; i++) {

    if (global.powerstar[i] == 3)
        j++;
}

//Check stars collected
if (j &gt;= 7) {

    beaten = 1;
    sprite_index = spr_mappanel_secret;
}

//Able to enter
ready = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the panel

//Draw j
draw_text(bbox_left+bbox_right/2-5,y-16,string(j));

//Draw thumbnail
if (sprite_index != spr_mappanel) {

    draw_sprite_ext(spr_thumbnail_secret1,thumb_frame,x,view_yview[0]+96,alpha2,alpha2,0,c_white,alpha2);
}

//Check if the player is on this spot
var player = collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,obj_mapplayer,0,1);
if (player)
&amp;&amp; (player.hspeed == 0) {

    //Handle main alpha value
    alpha += 0.05;
    if (alpha &gt; 1)
        alpha = 1;
        
    //Handle thumbnail alpha value
    alpha2 += 0.025;
    if (alpha2 &gt; 1)
        alpha2 = 1;
}
else {

    //Handle main alpha value
    alpha -= 0.05;
    if (alpha &lt; 0)
        alpha = 0;
        
    //Handle thumbnail alpha value
    alpha2 -= 0.025;
    if (alpha2 &lt; 0.5)
        alpha2 = 0.5;
}

//Draw panel
draw_sprite(sprite_index,-1,round(x),round(y));

//Draw the collected powerstars
if (global.powerstar[level_id] == 3)
    draw_sprite_ext(spr_powerstar_noget,1,x,y+20,1,1,0,c_white,alpha);
else
    draw_sprite_ext(spr_powerstar_noget,0,x,y+20,1,1,0,c_white,alpha/2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
