<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_qblock</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>obj_blockparent</parentName>
  <maskName>spr_square</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Standard Question Mark block

/*
//  This object uses creation code!
//
//  sprout = Item to sprout out from this block. (Pick from below)
//
//  cs_coin (Default)
//  cs_fire
//  cs_1up
//  cs_star
//  cs_poison
//  cs_pswitch
//  cs_beanstalk
//  cs_goomba
//  cs_koopa
//  cs_koopa_red
//  cs_hammerbro
//  cs_buzzy
//  cs_spiny
//  cs_spiketop
//  cs_spiketop_blue
//  cs_cheep
//  cs_cheep_green
//  cs_blooper
//  cs_bobomb
*/

//Default variable
sprout = cs_coin;

//Animate
image_speed = 0.15;

//Inherit the default event
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>nograv</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Finish bump and sprout out an item.

//Stop movement
vspeed = 0;
y = ystart;

//Create a item
if (sprout != cs_coin)
    event_user(1);

//Turn into a used block
instance_create(xstart,ystart,obj_qblock_empty);
instance_destroy();
exit;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sprout out an item

//Create sprout object with...
with (instance_create(xstart,ystart,obj_powerupsprout)) {

    //Check what item does the block have
    switch (other.sprout) {
    
        //Mushroom / Fireflower
        case (cs_fire): {
        
            //Check the state of the player and sprout out the adequate powerup.
            if (global.powerup == cs_small)
                sprite_index = spr_mushroom;
            else
                sprite_index = spr_fireflower;
        } break;
        
        //Star
        case (cs_star): {
        
            sprite_index = spr_star;
        } break;
        
        //1-Up
        case (cs_1up): {
        
            sprite_index = spr_1up;
        } break;
        
        //Poison
        case (cs_poison): {
        
            sprite_index = spr_poison;
        } break;
        
        //P-Switch
        case (cs_pswitch): {
        
            sprite_index = spr_pswitch;
        } break;
        
        //Beanstalk
        case (cs_beanstalk): {
        
            sprite_index = spr_beanstalk;
        } break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create a coin

if (sprout == cs_coin)
    instance_create(xstart,ystart-16,obj_blockcoin);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the block

//If the block is covered with a brick.
if (sprite_index == spr_brick) {

    //Set the shader
    scr_pal_swap_set(spr_palette_brick,global.skin);
    
    //Draw the brick
    if (vspeed == 0) {
    
        draw_sprite(sprite_index,-1,round(x),round(y));
    }
    else {
    
        draw_sprite_ext(spr_brick_hit,-1,x+8,y+16,scale,scale,0,c_white,1);
    }
        
    //Reset the shader
    shader_reset();
}

//Otherwise, inherit the default event
else
    event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
