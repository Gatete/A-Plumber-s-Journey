<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_wiggler</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_deactenemyparent</parentName>
  <maskName>spr_wigglermask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///A wiggler, people says that it will get mad after stomping it.

//How vulnerable is this enemy to various items?
hardness = 1;

//How vulnerable is this enemy to Mario?
stomp = 1;

//Facing direction
xscale = 1;

//Scoregrade
scoregrade = 4;

//Start walking towards Mario
alarm[10] = 2

//Animate
image_speed = 0.1;

//Not angry
ready = 0;

//Previous horizontal speed
prevhspeed = 0;

//Body parts
for (i=0; i&lt;4; i++;) {

    mybody[i] = instance_create(x,y,obj_wiggler_body);
    mybody[i].parent = id;
    mybody[i].offset = 10+(8*i);
    mybody[i].image_index = 0+(2*i);
    mybody[i].depth = -1+i;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>nograv</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Walk towards the player after being stomped

//Default event
hspeed = sign(xscale)*1;

//Turn around script
event_user(15);

//Turn towards the player
alarm[0] = 48;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Walk towards the player

//If wiggler is not moving
if (hspeed == 0) {

    if (!instance_exists(obj_player))
    || (obj_player.x &lt; x)
        hspeed = -0.5;
    else
        hspeed = 0.5;
}

//Turn around script
event_user(15);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Turn towards the player

if (instance_exists(obj_player)) {

    if ((obj_player.x &lt; x) &amp;&amp; (hspeed &gt; 0)) {
    
        hspeed = -1;
        event_user(15);
    }
    else if ((obj_player.x &gt; x) &amp;&amp; (hspeed &lt; 0)) {
    
        hspeed = 1;
        event_user(15);
    }
    else
        alarm[0] = 50;
}
else
    alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Make sure body parts don't get lost

if (!instance_exists(mybody[0]))
    instance_activate_object(mybody[0]);
if (!instance_exists(mybody[1]))
    instance_activate_object(mybody[1]);
if (!instance_exists(mybody[2]))
    instance_activate_object(mybody[2]);
if (!instance_exists(mybody[3]))
    instance_activate_object(mybody[3]);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Wiggler hates to walk off ledges

//Remember horizontal speed
prevhspeed = hspeed;

//Default event
event_inherited();

//Turn at ledges
event_user(6);

//If wiggler's speed changed, turn around
if (hspeed != 0) {

    if (prevhspeed != hspeed)
        event_user(15);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Player stomp script

//Exit event if player is under the effects of the starman.
if (instance_exists(obj_invincibility))
exit;

if (other.invulnerable != -1) {

    //If the player is above the enemy and it's moving down.
    if (other.bbox_bottom &lt; bbox_top-vspeed+5) {
    
        //Play 'Stomp' sound
        scr_playsound(snd_stomp, snd_swim_8bit, 0, false);
        
        //Prevent enemies from getting double stomped
        if (vspeed &lt; 0) {
        
            y = yprevious;
            if (other.vspeed &gt; 0)
                other.y = other.yprevious;
        }
        
        //Make player bounce
        with (other) event_user(1);
        
        //Stomp sequence
        if (ready == 0) {        
                                    
            //Points
            with (instance_create(round(bbox_left+bbox_right)/2-8,round(y),obj_points)) {
            
                if (obj_player.combo &lt; 10)
                    event_user(0+obj_player.combo);
                else
                    event_user(11);
            }
            obj_player.combo++;
            
            //Stomp the enemy
            event_user(1);
        }
        
        //Spin thump
        with (instance_create(other.x,other.bbox_bottom-8,obj_smoke)) {
        
            sprite_index = spr_spinthump;
            image_speed = 0.3;
        }
    }       
    
    
    //Otherwise, hurt the player
    else
        with (other) event_user(0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Turn around

//Change facing direction
if (hspeed &gt; 0)
    xscale = 1;
else
    xscale = -1;

//Make body parts turn around in order
if (ready = 0) {
    
    with (mybody[0]) alarm[0] = 20;
    with (mybody[1]) alarm[0] = 36;
    with (mybody[2]) alarm[0] = 52;
    with (mybody[3]) alarm[0] = 68;
}

//Faster if angry, and continue chasing Mario
else {

    alarm[0] = 50;    
    with (mybody[0]) alarm[0] = 10;
    with (mybody[1]) alarm[0] = 18;
    with (mybody[2]) alarm[0] = 26;
    with (mybody[3]) alarm[0] = 34;
}

//Set their next direction
with (mybody[0]) nextxscale = other.xscale;
with (mybody[1]) nextxscale = other.xscale;
with (mybody[2]) nextxscale = other.xscale;
with (mybody[3]) nextxscale = other.xscale;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Special turn at enemies script

///Special turn at enemies script
if (hspeed &gt; 0
&amp;&amp; collision_rectangle(bbox_right,bbox_top,bbox_right+hspeed*2,bbox_bottom,obj_enemyparent,0,1)
&amp;&amp; !collision_rectangle(bbox_right,bbox_top,bbox_right+hspeed*2,bbox_bottom,obj_wiggler_body,0,1))
|| (hspeed &lt; 0
&amp;&amp; collision_rectangle(bbox_left+hspeed*2,bbox_top,bbox_left,bbox_bottom,obj_enemyparent,0,1)
&amp;&amp; !collision_rectangle(bbox_left+hspeed*2,bbox_top,bbox_left,bbox_bottom,obj_wiggler_body,0,1))
    hspeed = -hspeed
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Wiggler stomp

//Kill flower
with (instance_create(x-4*xscale,y+16,obj_enemy_dead)) sprite_index = spr_wiggler_flower;

//Make angry
ready = 1;
sprite_index = spr_wiggler_mad;
image_speed = 0.2;
hspeed = 0;

//Make body parts angry
for (i=0; i&lt;4; i++;) {

    with (mybody[i]) {
    
        ready = 1
        sprite_index = spr_wiggler_mad_body;
        image_speed = 0.4;
        hspeed = 0;
    }
}

//Go after the player
alarm[11] = 48;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Default wiggler death script

//Create the dead enemy object
imdead = instance_create(x,y,obj_enemy_dead);

//Set the sprite for the object
imdead.sprite_index = sprite_index;

//Set the facing direction
imdead.image_xscale = xscale;

//Set the frame for the object
imdead.image_index = 0;

//Do not jump
imdead.vspeed = 0;
imdead.gravity = 0;

//Delay jump
imdead.alarm[1] = 1;

//Do not spin
imdead.noangle = true;

//Make body parts follow
for (i=0; i&lt;4; i++;) {

    with (mybody[i]) {
    
        //Create the dead enemy object
        imdead = instance_create(x,y,obj_enemy_dead);
        
        //Set the sprite for the object
        imdead.sprite_index = sprite_index;
        
        //Set the frame for the object
        imdead.image_index = image_index;        
        
        //Set the facing direction
        imdead.image_xscale = xscale;
                
        //Do not spin
        imdead.noangle = true;
        
        //Do not jump
        imdead.vspeed = 0;
        imdead.gravity = 0;
        
        //Delay jump
        imdead.alarm[1] = 5+(4*other.i);
        
        //Destroy
        instance_destroy();        
    }
}
    
//Destroy
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw wiggler

draw_sprite_ext(sprite_index,-1,round(x),round(y)-2,xscale,1,0,c_white,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
