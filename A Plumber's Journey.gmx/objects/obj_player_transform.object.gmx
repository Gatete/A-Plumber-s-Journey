<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>-4</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///The player got a powerup, change him.

//Sets the animation sequences
ready = 0;

//Whether the animation loops
loop = 0;

//Set the animation to use
//0: Small to big
//1: Big to small
//2: Fire
sequence = 0;

//Make the player invisible
if (instance_exists(obj_player)) {

    //Make the player invisible
    obj_player.visible = false;
    
    //Snap into position
    x = obj_player.x;
    y = obj_player.y;
    
    //Hereby the player's facing direction
    image_xscale = obj_player.xscale;
}

//Make score texts invisible
if (instance_number(obj_points) &gt; 0) {

    with (obj_points) 
        visible = false;
}

//Make foreground layers invisible
with (obj_levelmanager) event_user(1);
if (instance_number(obj_foreground) &gt; 0) {

    with (obj_foreground) {
    
        visible = false;
        event_user(0);
    }
}

//Start animation
alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>nograv</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Make the player visible and make stopped background layers move again

//Make the player visible
with (obj_player) visible = 1;

//Make foreground layers move again
with (obj_foreground) event_user(1);

//Make background layers move again
with (obj_levelmanager) event_user(2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set up animation sequence and take up a screenshot.

//Take a screenshot.
back = background_create_from_surface(application_surface,0,0,room_width,room_height,0,0);

//Deactivate all instances.
instance_deactivate_all(true);

//Activate score texts
instance_activate_object(obj_points);
if (instance_exists(obj_points)) {

    with (obj_points) 
        visible = 1;
}

//Activate foreground layers
instance_activate_object(obj_foreground);
if (instance_exists(obj_foreground)) {

    with (obj_foreground) 
        visible = 1;
}

//Activate persistent object.
instance_activate_object(obj_persistent);

//Set the animation sequence.
switch (sequence) {

    //Small to Big
    case (0): { 
    
        //Set animation speed
        image_speed = 0.25;
        
        //Set sprite
        if (global.player == 0)
            sprite_index = spr_mario_grow;
        else
            sprite_index = spr_luigi_grow;
    } break;
    
    //Big to Small
    case (1): {
    
        //Set animation speed
        image_speed = 0.25;
        
        //Set sprite
        if (global.player == 0)
            sprite_index = spr_mario_shrink;
        else
            sprite_index = spr_luigi_shrink;
    } break;
    
    //Fire;
    case (2): {
    
        //Set animation speed
        image_speed = 1;
        
        //Loop
        loop = 6;
        
        //Set sprite
        if (global.player == 0)
            sprite_index = spr_mario_powerup;
        else
            sprite_index = spr_luigi_powerup;
    } break;
}

//Animation has been set.
ready = true;

//Make the object visible.
visible = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///If the animation has ended and no more loops are needed.

if (ready) {

    //Does the animation still loop.
    if (loop &gt; 0) {
    
        //Decrement loop
        loop--;
    }
    else {
    
        //Delete the screenshot if it exists.
        if (background_exists(back)) {
        
            background_delete(back);
        }
        
        //Activate all instances.
        instance_activate_all();
        
        //Destroy
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Mario

//If the animation has been set, draw the background.
if (ready) {

    if (background_exists(back)) {
    
        //Disable alpha blending.
        draw_enable_alphablend(0);
        
        //Draw the screenshot
        draw_background(back,view_xview[0],view_yview[0]);
        
        //Enable alpha blending.
        draw_enable_alphablend(1);
    }
}

//Draw Mario
draw_sprite_ext(sprite_index,-1,round(x),round(y)+1,image_xscale,1,0,c_white,image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
